//----------------------
// <auto-generated>
// </auto-generated>
//----------------------
using System.Net.Http;
using Infusio.Model;
using LanguageExt;
using Newtonsoft.Json;

namespace Infusio.Http
{
    using static Prelude;
    using static HttpUtils;

    internal static class Workflows
    {
        {% for op in Operations -%}
        public static HttpWorkflow<{{ op.ResponseType | normalize }}> AsHttpWorkflow<T>(this InfusioOp<T>.{{ op.Name }} op) => HttpWorkflow{% if op.ResponseType != 'Unit' %}<{{ op.ResponseType | normalize }}>{% endif %}(
                       message: Request({% if op.HttpMethod == 'Patch' -%}
                               new HttpMethod("{{ op.HttpMethod }}"){% else %}HttpMethod.{{ op.HttpMethod }}{% endif -%},MakeUri($"{{ op.Path | showoperationpath }}"{% if op.HasQueryParameters %}, {% endif %}{% for p in op.QueryParameters -%}
                               RequestParameter("{{ p.Name }}", op.{{ p.Name | normalize }}){% if forloop.last == false %}, {% endif %}{% endfor %}){% if op.HasRequestBodyParameters -%}, {% endif -%}{% if op.HasSingleBodyParameter -%}
                           op.{{ op.SingleBodyParameter.Name | normalize }}{% else -%}{% for p in op.RequestBodyParameters -%}RequestParameter("{{ p.Name }}", op.{{ p.Name | normalize }}){% if forloop.last == false -%}, {% endif -%}{% endfor -%}{% endif -%}),
                       responses: HashSet<KnownResponse.Eq, KnownResponse>(
{% for res in op.Responses -%}
                           new KnownResponse({{ res.StatusCode }}, "{{ res.Description }}", typeof({{ res.Type | normalize }})){% if forloop.last == false %}, {% endif %}
{% endfor -%}
                       )
                );

        {% endfor %}
    }
}